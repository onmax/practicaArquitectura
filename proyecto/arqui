* Inicializa el SP y el PC
**************************
        ORG     $0
        DC.L    $8000           * Pila
        DC.L    INICIO          * PC

bfa_r:  ORG     $10000          * HOLA MUNDO
        DC.B    "HOLA MUNDO"
bfb_r:  ORG     $12000
bfa_t:  ORG     $14000
bfb_t:  ORG     $16000


        ORG     $20000

* Definici?n de equivalencias
***************************************
*********************************

***Para A - Tabla pg.27***
MR1A    EQU     $effc01       * de modo A (escritura)
MR2A    EQU     $effc01       * de modo A (2? escritura)
SRA     EQU     $effc03       * de estado A (lectura)
CSRA    EQU     $effc03       * de seleccion de reloj A (escritura)
CRA     EQU     $effc05       * de control A (escritura)
TBA     EQU     $effc07       * buffer transmision A (escritura)
RBA     EQU     $effc07       * buffer recepcion A  (lectura)
ACR	    EQU   	$effc09	      * de control auxiliar

***Para B - Tabla pg.27***
MR1B    EQU     $effc11       * de modo B (escritura)
MR2B    EQU     $effc11       * de modo B (2? escritura)
SRB     EQU     $effc13       * de estado B (lectura)
CSRB    EQU     $effc13       * de seleccion de reloj B (escritura)
CRB     EQU     $effc15       * de control B (escritura)
RBB     EQU     $effc17       * buffer recepcion B  (lectura)
TBB     EQU     $effc17       * buffer transmision B (escritura)

*ambas. Ver tabla pg.37
IMR     EQU     $effc0B       * de mascara de interrupcion A (escritura)
ISR     EQU     $effc0B       * de estado de interrupcion A (lectura)
IVR     EQU   	$effc19	      * de control auxiliar


*Buffers
tam_bf  EQU     2000

bfa_r:  DS.B    tam_bf
bfa_t:  DS.B    tam_bf
bfb_r:  DS.B    tam_bf
bfb_t:  DS.B    tam_bf


*Punteros
MOVE.L $10000, bfa_r_i
MOVE.L $10000, bfa_r_F

CPIMR:  DC.B    0



**************************** INIT *************************************************************
INIT:
        *ivr a 16
        *ivr && isr
        MOVE.B          #%00010000,CRA      * Reinicia el puntero MR1
        MOVE.B          #%00000011,MR1A     * 8 bits por caracter.
        MOVE.B          #%00000000,MR2A     * Eco desactivado.
        MOVE.B          #%11001100,CSRA     * Velocidad = 38400 bps.
        MOVE.B          #%00000000,ACR      * Velocidad = 38400 bps.
        MOVE.B          #%00000101,CRA      * Transmision y recepcion activados.
        RTS
**************************** FIN INIT *********************************************************








**************************** PRINT ************************************************************
PRINT:  RTS

**************************** FIN PRINT ********************************************************






**************************** SCAN ************************************************************
SCAN:       MOVE.B #10,D3		*Contador
b_scan:	    BTST #0,SRA		*Comparamos el bit 0 (RxRDY) de SRA con 1, sin es != se va a fin
            BNE fin
            MOVE.B RBA,-(A7)	*Obtenemos el caracter y lo llevamos a pila
            ADD D3,1		*Sumamos 1 al contador en cada iteracion
            CMP #13,RBA		*Comparamos 13 con D0
            BNE b_scan
fin:	      DC.L $8000		*SP la dejamos igual
	RTS
**************************** FIN SCAN ********************************************************




**************************** LEERCAR ************************************************************
LEERCAR:   MOVE.L     bfa_r_i,D0
	         BTST       #0, D0
	         BEQ        LC_CERO	        *If it is equal to 0
	         MOVE.B     D0, D1
LIN.B:	   BTST       #1, D1	        *Buffer
	         BEQ        RECEP
           RTS
LC_CERO:   MOVE.L     0xFFFFFFFF, D0
	         RTS


**************************** FIN LEERCAR ********************************************************

**************************** ESCCAR ************************************************************
ESCCAR:  RTS

**************************** FIN ESCCAR ********************************************************





**************************** LINEA ************************************************************
LINEA:  RTS

**************************** FIN LINEA ********************************************************




**************************** PROGRAMA PRINCIPAL **********************************************
INICIO: BSR             INIT                * Inicia el controlador

        BSR             LEERCAR               * Recibe la linea
        *ADD.L           #4,A7               * Restaura la pila
        *MOVE.L          #$5000,-(A7)        * Prepara la direcci?n del buffer
        *BSR             PRINT               * Imprime l?nea
        *ADD.L           #4,A7               * Restaura la pila
BRA		  OTRO

         BREAK
**************************** FIN PROGRAMA PRINCIPAL ******************************************
